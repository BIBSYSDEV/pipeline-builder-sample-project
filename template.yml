AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'EC2 templace'


Parameters:
  ProjectId:
    Type: String
    Description: Automatically generated ProjectId based on repository and branch
  Stage:
    Type: String
    Description: Deployment stage. Either TEST or FINAL
  Branch:
    Type: String
    Description: The Git branch
  CodeBucket:
    Type: String
    Description: Automatically generated bucket where the code is stored
  InitFunctionName:
    Type: String
    Description: Automatically generated name for the initialization function
  DestroyFunctionName:
    Type:  String
    Description: Automatically generated name for the destroy function

Resources:
  SmallServer:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-08660f1c6fb6b01e7
      InstanceType: t2.micro


  Destroy:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers.SimplePipelineLambdaFunction::handleRequest
      FunctionName: !Ref InitFunctionName
      Runtime: java8
      CodeUri: build/libs/pipeline-example-fat.jar
      Policies:
        Version: '2012-10-17'
        Statement:
          - Action:
              - lambda:InvokeFunction
              - codepipeline:PutJobFailureResult
              - codepipeline:PutJobSuccessResult
            Effect: Allow
            Resource: "*"
          - Effect: Allow
            Action: iam:CreateServiceLinkedRole
            Resource: "arn:aws:iam::*:role/aws-service-role/*"
      MemorySize: 256
      Timeout: 900


  Init:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.myHandler
      InlineCode: >
        ZipFile: |
        var AWS = require('aws-sdk');
        exports.myHandler = function(event, context) {

            var codepipeline = new AWS.CodePipeline();
                // Retrieve the Job ID from the Lambda action
            var jobId = event["CodePipeline.job"].id;

            var putJobSuccess = function(message) {
                var params = {
                    jobId: jobId
                };
                codepipeline.putJobSuccessResult(params, function(err, data) {
                    if(err) {
                        context.fail(err);
                    } else {
                        context.succeed(message);
                    }
                });
            };


            putJobSucess('Lambda function success');
            // Validate the URL passed in UserParameters

        };

      FunctionName: !Ref DestroyFunctionName
      Runtime: nodejs8.10
      Policies:
        Version: '2012-10-17'
        Statement:
          - Action:
              - lambda:InvokeFunction
              - codepipeline:PutJobFailureResult
              - codepipeline:PutJobSuccessResult
            Effect: Allow
            Resource: "*"
          - Effect: Allow
            Action: iam:CreateServiceLinkedRole
            Resource: "arn:aws:iam::*:role/aws-service-role/*"
      MemorySize: 256
      Timeout: 900

